{"version":3,"sources":["components/pixi/Viewport.tsx","components/pixi/Marker.tsx","common/constants.ts","components/pixi/ParticleEmitter.ts","content/parseContent.ts","components/contentModal/YoutubeModalContent.tsx","images/ui/check.svg","components/contentModal/OptionsModalContent.tsx","components/contentModal/IFrameModalContent.tsx","components/contentModal/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Viewport","React","forwardRef","props","ref","app","useApp","cursor","process","renderer","plugins","interaction","cursorStyles","pointer","PixiComponentViewport","PixiComponent","create","viewport","PixiViewport","screenWidth","screenHeight","worldWidth","worldHeight","ticker","minScale","maxScale","drag","pinch","wheel","clamp","direction","clampZoom","decelerate","PixiPlugin","registerPIXI","PIXI","gsap","registerPlugin","ContentType","Marker","useRef","data","useState","position","setPosition","useEffect","from","current","duration","ease","pixi","visible","scale","delay","onDragStart","event","stopPropagation","onDragEnd","undefined","console","log","onDragMove","newPosition","getLocalPosition","parent","anchor","interactive","image","mousedown","touchstart","mouseup","mouseupoutside","mousemove","touchmove","ParticleEmitter","applyProps","instance","oldProps","newProps","config","newP","applyDefaultProps","emitter","this","_emitter","particles","elapsed","performance","now","emit","tick","raf","requestAnimationFrame","update","willUnmount","cancelAnimationFrame","parsed","rawJson","map","json","type","options","youtube","iframe","YoutubeModalContent","content","url","width","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","_ref3","_ref4","id","className","points","_ref","svgRef","title","x","y","height","viewBox","style","enableBackground","xmlSpace","ForwardRef","OptionsModalContent","selectedOption","selectOption","bannerImg","description","backgroundImage","option","index","onClick","disabled","IframeModalContent","src","ContentModal","onClose","handleClose","isOpen","ariaHideApp","overlayClassName","onRequestClose","header","renderContent","App","viewportRef","forkliftRef","selectedContent","selectContent","canvasWidth","setCanvasWidth","canvasHeight","setCanvasHeight","resize","Math","min","window","innerWidth","outerWidth","innerHeight","outerHeight","addEventListener","removeEventListener","moveCenter","to","blur","forklift","tl","timeline","repeat","repeatDelay","onStart","onComplete","renderMarker","contentItem","pointerdown","name","smoke","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cf01471a.chunk.js","sourcesContent":["import React from \"react\";\nimport { Viewport as PixiViewport, ClickEventData } from \"pixi-viewport\";\nimport { PixiComponent, useApp } from \"@inlet/react-pixi\";\n\ninterface Props {\n  children: React.ReactNode;\n  onClick?(event: ClickEventData): void;\n  screenWidth: number,\n  screenHeight: number,\n  worldWidth: number,\n  worldHeight: number,\n  minScale?: number;\n  maxScale?: number;\n}\n\n/** Viewport leverages pixi-viewport to create a pannable map \n * https://davidfig.github.io/pixi-viewport/jsdoc/\n */\nconst Viewport = React.forwardRef<PixiViewport, any>((props, ref) => {\n  const app = useApp();\n  if (app) {\n      // Perhaps this is better moved somewhere else\n      const cursor = `url('${process.env.PUBLIC_URL}/img/cursors/dwarven_gauntlet_extra_6.png'), auto`;\n      app.renderer.plugins.interaction.cursorStyles.pointer = cursor;\n  }\n  return <PixiComponentViewport app={app} {...props} ref={ref} />;  \n})\n\ninterface PixiComponentProps {\n    app: PIXI.Application;\n}\n\nconst PixiComponentViewport = PixiComponent(\"Viewport\", {\n  create: (props: PixiComponentProps & Props) => {\n    const viewport = new PixiViewport({\n      screenWidth: props.screenWidth,\n      screenHeight: props.screenHeight,\n      worldWidth: props.worldWidth,\n      worldHeight: props.worldHeight,\n      ticker: props.app.ticker,\n      interaction: props.app.renderer.plugins.interaction,\n      // the interaction module is important for wheel to work properly when renderer.view is placed or scaled\n    });\n\n    const { \n      minScale = .5, \n      maxScale = 1 \n    } = props;\n    \n    viewport\n      .drag()\n      .pinch()\n      .wheel()\n      .clamp({ direction: 'all' })\n      .clampZoom({ minScale, maxScale })\n      .decelerate();\n\n    return viewport;\n  },\n});\nexport default Viewport;\n","import React, { useRef, useEffect, useState } from 'react';\nimport { Sprite } from '@inlet/react-pixi';\nimport * as PIXI from 'pixi.js';\nimport { PixiPlugin } from 'gsap/all';\nimport { gsap } from 'gsap'\n\nPixiPlugin.registerPIXI(PIXI);\ngsap.registerPlugin(PixiPlugin);\n\ninterface Props {\n    position?: PIXI.Point;\n    delay?: number; // Wait this long before showing\n}\n\nconst Marker = (props: Props & React.ComponentProps<typeof Sprite>) => {\n    const ref = useRef<PIXI.Sprite>(null);\n    const data = useRef<PIXI.interaction.InteractionData>();\n    const [position, setPosition] = useState<PIXI.Point>(props.position || new PIXI.Point());\n\n    useEffect(() => {\n        // Pop in animation!\n        gsap.from(ref.current, { \n          duration: 1,\n          ease: \"elastic.out(2, 0.5)\",\n          pixi: { \n            visible: false,\n            scale: .1, \n          }\n        }).delay(props.delay || 0);\n    }, [props.delay]);\n\n    const onDragStart = (event: PIXI.interaction.InteractionEvent) => {\n        // store a reference to the data\n        // the reason for this is because of multitouch\n        // we want to track the movement of this particular touch\n        data.current = event.data;\n        event.stopPropagation(); // Stop dragging the map!\n    }\n    \n    const onDragEnd = () => {\n        data.current = undefined;\n        console.log(position);\n    }\n    \n    const onDragMove = () => {\n        if (data.current)\n        {\n            const newPosition = data.current.getLocalPosition(ref.current!.parent);\n            setPosition(newPosition);\n        }\n    }\n    \n    return (\n        <Sprite \n            { ...props }\n            anchor={[0.5, 0.5]}\n            position={position}\n            ref={ref}\n            interactive={true}\n            image={`${process.env.PUBLIC_URL}/images/ui/marker.svg`}\n            mousedown={onDragStart}\n            touchstart={onDragStart}\n            mouseup={onDragEnd}\n            mouseupoutside={onDragEnd}\n            mousemove={onDragMove}\n            touchmove={onDragMove}\n        />\n    );\n}\n\nexport default Marker;","export interface ISituations {\n  [name: string]: ISituation\n}\n  \nexport interface ISituation {\n  header: string;\n  description: string;\n  options: string[];\n}\n\nexport enum ContentType {\n  youtube = \"youtube\",\n  options = \"options\",\n  iframe = \"iframe\",\n}\n  \nexport interface IContent<T extends YoutubeContent | OptionsContent> {\n  position: number[];\n  type: ContentType;\n  header: string;\n  content: T;\n}\n\nexport type AnyContent = IContent<YoutubeContent> | IContent<OptionsContent> | IContent<IframeContent>;\n\nexport interface YoutubeContent {\n  url: string;\n}\n\nexport interface IframeContent {\n  url: string;\n  height?: number | string;\n}\n\nexport interface OptionsContent {\n  description: string;\n  bannerImg: string;\n  options: string[];\n  correctAnswers: number[];\n}\n","import { PixiComponent, applyDefaultProps, Container } from \"@inlet/react-pixi\";\nimport * as PIXI  from 'pixi.js';\nimport * as particles from 'pixi-particles';\n\n\ninterface Props  {\n    image: string;\n    config: particles.OldEmitterConfig | particles.EmitterConfig;\n};\n\nconst ParticleEmitter = PixiComponent<Props & React.ComponentProps<typeof Container>, PIXI.ParticleContainer>(\"ParticleEmitter\", {\n    create() {\n      return new PIXI.ParticleContainer();\n    },\n\n    applyProps(instance, oldProps: Props, newProps: Props) {\n      const { image, config, ...newP } = newProps;\n  \n      // apply rest props to PIXI.ParticleContainer\n      applyDefaultProps(instance, oldProps, newP);\n      \n      let emitter = (this as any)._emitter;\n      if (!emitter) {\n        emitter = new particles.Emitter(\n          instance,\n          [PIXI.Texture.from(image)],\n          config\n        );\n  \n        let elapsed = performance.now();\n  \n        const tick = () => {\n          emitter.raf = requestAnimationFrame(tick);\n          const now = performance.now();\n          emitter.update((now - elapsed) * 0.0003);\n  \n          elapsed = now;\n        };  \n        emitter.emit = true;\n\n        tick();\n      }\n      (this as any)._emitter = emitter;\n    },\n\n    willUnmount() {\n      if ((this as any)._emitter) {\n        (this as any)._emitter.emit = false;\n        cancelAnimationFrame((this as any)._emitter.raf);\n      }\n    }\n});\n\nexport default ParticleEmitter;","import rawJson from './content.json';\nimport { IContent, ContentType, OptionsContent, YoutubeContent, IframeContent } from '../common/constants';\n\nconst parsed = rawJson.map((json) => {\n  const type: ContentType = (ContentType as any)[json.type];\n  switch (type) {\n    case ContentType.options: \n      return json as any as IContent<OptionsContent>;\n    case ContentType.youtube: \n      return json as any as IContent<YoutubeContent>;\n    case ContentType.iframe: \n      return json as any as IContent<IframeContent>;\n  }\n});\nexport default parsed;","import React from 'react';\nimport { YoutubeContent } from '../../common/constants';\nimport ReactPlayer from \"react-player\";\n\ninterface Props {\n  content: YoutubeContent;\n}\n\nconst YoutubeModalContent = (props: Props) => {\n  const {content} = props;\n  return (\n    <ReactPlayer\n      url={content.url}\n      width=\"100%\"\n    /> \n  )\n}\n\nexport default YoutubeModalContent;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"style\", {\n  type: \"text/css\"\n}, \"\\n\\t.st0{fill:none;stroke:#3FA548;stroke-width:32;}\\n\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"defs\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Page-1\"\n}, /*#__PURE__*/React.createElement(\"polyline\", {\n  id: \"checkmark\",\n  className: \"st0\",\n  points: \"11.33,88.97 88.95,166.87 244.67,11.32  \"\n}));\n\nvar SvgCheck = function SvgCheck(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"m-check-mark\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"255.97px\",\n    height: \"189.51px\",\n    viewBox: \"0 0 255.97 189.51\",\n    style: {\n      enableBackground: \"new 0 0 255.97 189.51\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCheck, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/check.81786b3c.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\nimport { OptionsContent } from '../../common/constants';\nimport { ReactComponent as CheckSvg } from './../../images/ui/check.svg';\n\ninterface Props {\n  content: OptionsContent;\n}\n\nconst OptionsModalContent = (props: Props) => {\n  const {content} = props;\n  const [selectedOption, selectOption] = useState<number | null>(null);\nconsole.log(content.bannerImg)\n  return (\n    <>\n      <p>\n        {content.description}\n      </p>\n      <div className=\"banner\" style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/${content.bannerImg})`}}></div>\n      <ul className=\"options\">\n        {content.options.map((option, index) => (\n          <li key={option} className={index === selectedOption ? \"active\" : \"\"} onClick={() => selectOption(index)} >\n            <div className=\"checkbox\">\n              <CheckSvg className=\"check\" />\n            </div>\n            <div>\n              {option}\n            </div>\n          </li>\n        ))}\n      </ul>\n      <button disabled={selectedOption === null} >\n        <b>Okay</b>\n      </button>\n    </>\n  )\n}\n\nexport default OptionsModalContent;\n\n","import React, { useState } from 'react';\nimport { IframeContent } from '../../common/constants';\n\ninterface Props {\n  content: IframeContent;\n}\n\nconst IframeModalContent = (props: Props) => {\n  const {content} = props;\n  \n  return (\n    <iframe\n      title=\"21cc game\"\n      src={content.url}\n      width=\"100%\"\n      height={content.height}\n    /> \n  )\n}\n\nexport default IframeModalContent;\n\n","import React from 'react';\nimport ReactModal from 'react-modal';\nimport './modal.css';\nimport { AnyContent, ContentType, YoutubeContent, OptionsContent, IframeContent } from '../../common/constants';\nimport YoutubeModalContent from './YoutubeModalContent';\nimport OptionsModalContent from './OptionsModalContent';\nimport IframeModalContent from './IFrameModalContent';\n\ninterface Props {\n  content: AnyContent;\n  onClose: () => void;\n}\n\nconst ContentModal = (props: Props) => {\n  const { content, onClose } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const renderContent = () => {\n    switch(content.type) {\n      case ContentType.youtube: \n        return <YoutubeModalContent content={content.content as YoutubeContent} />\n      case ContentType.options: \n        return <OptionsModalContent content={content.content as OptionsContent} />\n      case ContentType.iframe: \n        return <IframeModalContent content={content.content as IframeContent} />\n    }\n  }\n\n  return (\n    <ReactModal\n      isOpen={true}\n      ariaHideApp={false}\n      overlayClassName={\"modal-overlay\"}\n      className={`modal-content`}\n      onRequestClose={() => handleClose()}\n    >\n      <>\n        <div className=\"header\">\n          <h1>{content.header} </h1>\n          <div className=\"modal-close\" onClick={() => handleClose()}></div>\n        </div>\n        {renderContent()}\n      </>\n    </ReactModal>  \n  )\n}\n\nexport default ContentModal;\n\n","import React, { useRef, useEffect, useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { Stage, Sprite } from '@inlet/react-pixi';\nimport Viewport from './components/pixi/Viewport';\nimport { Viewport as PixiViewport } from \"pixi-viewport\";\nimport Marker from './components/pixi/Marker';\nimport { PixiPlugin } from 'gsap/all';\nimport { gsap } from 'gsap'\nimport './App.css';\nimport ParticleEmitter from './components/pixi/ParticleEmitter';\nimport smoke from './smoke.json';\nimport content from './content/parseContent';\nimport { AnyContent } from './common/constants';\nimport ContentModal from './components/contentModal';\n\nPixiPlugin.registerPIXI(PIXI);\ngsap.registerPlugin(PixiPlugin);\n\nif (process.env.NODE_ENV === \"development\") {\n  // @ts-ignore\n  window.__PIXI_INSPECTOR_GLOBAL_HOOK__ && window.__PIXI_INSPECTOR_GLOBAL_HOOK__.register({ PIXI: PIXI });\n}\n\nfunction App() {\n  const viewportRef = useRef<PixiViewport>(null);\n  const forkliftRef = useRef<PIXI.Sprite>(null);\n  const [selectedContent, selectContent] = useState<AnyContent | null>(null);\n\n  const worldWidth = 3588;\n  const worldHeight = 2388;\n  const scaleFactor = 1.86875; //scaled the original map up\n\n  const [canvasWidth, setCanvasWidth] = useState(1200);\n  const [canvasHeight, setCanvasHeight] = useState(600);\n\n  useEffect(() => {\n    // This will set the dimensions of the canvas to that of the window\n    const resize = () => {\n      const width = Math.min(window.innerWidth, window.outerWidth);\n      const height = Math.min(window.innerHeight, window.outerHeight);\n      setCanvasWidth(width);\n      setCanvasHeight(height); \n    }\n    resize();\n\n    window.addEventListener(\"resize\", resize);\n    return () => {\n      window.removeEventListener(\"resize\", resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    // Center the map\n    if (viewportRef.current) {\n      const viewport = viewportRef.current;\n      viewport.moveCenter(worldWidth / 2, worldHeight / 2);  \n    }\n  }, [canvasWidth, canvasHeight]);\n\n  useEffect(() => {\n    // Blur the map when situation is selected\n    if (selectedContent) {\n      gsap.to(viewportRef.current, {duration: .5, pixi: {blur:20}});\n    } else {\n      gsap.to(viewportRef.current, {duration: .5, pixi: {blur:0}});\n    }\n  }, [selectedContent]);\n\n  const handleMarkerClick = (content: AnyContent) => {\n    selectContent(content);\n  }\n\n  const handleClose = () => {\n    selectContent(null);\n  }\n\n  // const handleChooseOption = (option: number) => {\n  //   setsituationOrder([\n  //     ...situationOrder,\n  //     selectedSituation!\n  //   ])\n  // }\n\n  useEffect(() => {\n    // The forklift drives a square\n    const forklift = forkliftRef!.current!;\n    var tl = gsap.timeline({repeat: -1, repeatDelay: 1});\n    tl.to(forklift, {\n      pixi: { \n        x: 1143 * scaleFactor,\n        y: 667 * scaleFactor\n      }, \n      duration: 5\n    });\n    tl.to(forklift, {\n      pixi: { \n        x: 1423 * scaleFactor,\n        y: 545 * scaleFactor\n      }, \n      duration: 2\n    });\n    tl.to(forklift, {\n      pixi: { \n        x: 750 * scaleFactor,\n        y: 347 * scaleFactor,\n      }, \n      duration: 2\n    });\n    tl.to(forklift, {\n      onStart: () => { forklift.scale = new PIXI.Point(-1, 1) },\n      onComplete: () => { forklift.scale = new PIXI.Point(1, 1) },\n      pixi: { \n        x: 477 * scaleFactor,\n        y: 510 * scaleFactor\n      }, \n      duration: 2\n    });\n  }, []);\n\n  // const renderMarker = (situation: string, position: PIXI.Point, delay: number) => {\n  //   if (situationOrder.some(s => s === situation)) {\n  //     return null;\n  //   }\n  //   return <Marker position={position} pointerdown={() => handleMarkerClick(situation)} delay={delay} />\n  // }\n  const renderMarker = (contentItem: AnyContent, delay: number) => {\n    const position = new PIXI.Point(contentItem.position[0], contentItem.position[1]);\n    return (\n      <Marker position={position} \n        pointerdown={() => handleMarkerClick(contentItem)}\n        delay={delay} />\n    );\n  }\n\n  return (\n    <>\n      <Stage width={canvasWidth} height={canvasHeight} >\n        <Viewport screenWidth={canvasWidth} screenHeight={canvasHeight} worldWidth={worldWidth} worldHeight={worldHeight} ref={viewportRef} >\n          <Sprite image={`${process.env.PUBLIC_URL}/images/map/map.jpg`}  />\n          <Sprite image={`${process.env.PUBLIC_URL}/images/map/forklift1.png`} x={477 * scaleFactor} y={510 * scaleFactor} ref={forkliftRef}>\n      \n          </Sprite>\n          {/* {renderMarker('fire', new PIXI.Point(440 * scaleFactor, 449 * scaleFactor), 0.5)}\n          {renderMarker('theft', new PIXI.Point(986 * scaleFactor, 724 * scaleFactor), 1)}\n          {renderMarker('absenteeism', new PIXI.Point(1437 * scaleFactor, 447 * scaleFactor), 1.5)} */}\n          <ParticleEmitter\n              name=\"smoke\"\n              x={1931}\n              y={1293}\n              image={`${process.env.PUBLIC_URL}/images/map/smoke.png`} \n              config={smoke} \n            />\n          {content.map((contentItem, index) => renderMarker(contentItem, index * 0.5))}\n        </Viewport>\n      </Stage>\n      {/* <SituationOrder situationOrder={situationOrder} /> */}\n      { selectedContent && <ContentModal content={selectedContent} onClose={handleClose} /> }\n    </>  \n  )\n};\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}